// Mocks generated by Mockito 5.4.5 from annotations
// in legal_dost/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:legal_dost/services/database_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i2.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveUserRole(String? uid, String? role) =>
      (super.noSuchMethod(
            Invocation.method(#saveUserRole, [uid, role]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<String?> getUserRole(String? uid) =>
      (super.noSuchMethod(
            Invocation.method(#getUserRole, [uid]),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<void> saveLawyerRegistrationStatus(
    String? uid,
    bool? isRegistered,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveLawyerRegistrationStatus, [
              uid,
              isRegistered,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool?> getLawyerRegistrationStatus(String? uid) =>
      (super.noSuchMethod(
            Invocation.method(#getLawyerRegistrationStatus, [uid]),
            returnValue: _i3.Future<bool?>.value(),
          )
          as _i3.Future<bool?>);

  @override
  _i3.Future<void> saveLawyerProfile(
    String? uid,
    Map<String, dynamic>? profileData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveLawyerProfile, [uid, profileData]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
